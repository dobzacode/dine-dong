name: FastAPI CI

env:
  TF_LOG: INFO
  TF_INPUT: false

on:
  workflow_dispatch:

concurrency: 
  group: build
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_REGION: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_API_DOMAIN_NAME: ${{ secrets.TF_VAR_API_DOMAIN_NAME }}
      TF_VAR_DOMAIN_NAME_CERTIFICATE_ARN: ${{ secrets.TF_VAR_DOMAIN_NAME_CERTIFICATE_ARN }}
      TF_VAR_SECURITY__JWT_SECRET_KEY: ${{ secrets.TF_VAR_SECURITY__JWT_SECRET_KEY }}
      TF_VAR_SECURITY__BACKEND_CORS_ORIGINS: ${{ secrets.TF_VAR_SECURITY__BACKEND_CORS_ORIGINS }}
      TF_VAR_SECURITY__ALLOWED_HOSTS: ${{ secrets.TF_VAR_SECURITY__ALLOWED_HOSTS }}
      TF_VAR_DATABASE__HOSTNAME: ${{ secrets.TF_VAR_DATABASE__HOSTNAME }}
      TF_VAR_DATABASE__USERNAME: ${{ secrets.TF_VAR_DATABASE__USERNAME }}
      TF_VAR_DATABASE__PASSWORD: ${{ secrets.TF_VAR_DATABASE__PASSWORD }}
      TF_VAR_DATABASE__PORT: ${{ secrets.TF_VAR_DATABASE__PORT }}
      TF_VAR_DATABASE__DB: ${{ secrets.TF_VAR_DATABASE__DB }}
      TF_VAR_AUTH0_DOMAIN: ${{ secrets.TF_VAR_AUTH0_DOMAIN }}
      TF_VAR_AUTH0_API_AUDIENCE: ${{ secrets.TF_VAR_AUTH0_API_AUDIENCE }}
      TF_VAR_AUTH0_ISSUER: ${{ secrets.TF_VAR_AUTH0_ISSUER }}
      TF_VAR_AUTH0_ALGORITHMS: ${{ secrets.TF_VAR_AUTH0_ALGORITHMS }}
      TF_VAR_BASE_URL: ${{ secrets.TF_VAR_BASE_URL }}
      TF_VAR_STRIPE_SECRET_KEY: ${{ secrets.TF_VAR_STRIPE_SECRET_KEY }}
      TF_VAR_WEBHOOK_SECRET: ${{ secrets.TF_VAR_WEBHOOK_SECRET }}    
      TF_VAR_KV_REST_API_URL: ${{ secrets.TF_VAR_KV_REST_API_URL }}
      TF_VAR_KV_REST_API_TOKEN: ${{ secrets.TF_VAR_KV_REST_API_TOKEN }}
      TF_VAR_AXIOM_DATASET: ${{ secrets.TF_VAR_AXIOM_DATASET }}
      TF_VAR_AXIOM_TOKEN: ${{ secrets.TF_VAR_AXIOM_TOKEN }}
    defaults:
      run:
        working-directory: terraform
    steps:


      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Secrets Usage
        run: |
          echo "CORS Origins: ${{ secrets.TF_VAR_SECURITY__BACKEND_CORS_ORIGINS }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
       
      - name: Initialize Terraform
        run: |
          terraform fmt
          terraform init

      - name: Plan Terraform changes
        run: terraform plan -no-color


        
      - name: Apply Terraform changes (optional, requires confirmation)
        run: terraform apply -auto-approve 
