name: FastAPI CI

env:
  TF_LOG: INFO
  TF_INPUT: false

on:
  workflow_dispatch:
  push:
    branches: [ 'main' ]
    paths:
      - 'backend/**'
      - 'terraform/**'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'backend/**'
      - 'terraform/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Change directory to Terraform folder
        run: cd terraform

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
       
      - name: Initialize Terraform
        run: terraform init
        env:
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_api_domain_name: ${{ secrets.TF_VAR_API_DOMAIN_NAME }}
          TF_VAR_domain_name_certificate_arn: ${{ secrets.TF_VAR_DOMAIN_NAME_CERTIFICATE_ARN }}

      - name: Configure AWS credentials
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
     
      - name: Plan Terraform changes
        env: 
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_api_domain_name: ${{ secrets.TF_VAR_API_DOMAIN_NAME }}
          TF_VAR_domain_name_certificate_arn: ${{ secrets.TF_VAR_DOMAIN_NAME_CERTIFICATE_ARN }}
        run: terraform plan -no-color

      - name: Apply Terraform changes (optional, requires confirmation)
        env: 
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_api_domain_name: ${{ secrets.TF_VAR_API_DOMAIN_NAME }}
          TF_VAR_domain_name_certificate_arn: ${{ secrets.TF_VAR_DOMAIN_NAME_CERTIFICATE_ARN }}
        run: |
          if [[ $(git diff --cached --name-only | grep -qE '^\.terraform/') ]]; then
            terraform apply -auto-approve
          else
            echo "No changes detected in Terraform configuration. Skipping apply."
          fi

